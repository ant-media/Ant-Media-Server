<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>io.antmedia</groupId>
        <artifactId>parent</artifactId>
        <version>2.3.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>ant-media-server</artifactId>
    <name>Ant Media Server</name>
    <description>Ant Media Server supports RTMP, RTSP, MP4, HLS, WebRTC, Adaptive Streaming, etc.</description>
    <packaging>jar</packaging>
    <url>https://github.com/ant-media/Ant-Media-Server</url>
    <version>${project.parent.version}</version>
    <organization>
        <name>Ant Media</name>
        <url>https://antmedia.io</url>
    </organization>
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/ant-media/Ant-Media-Server/issues</url>
    </issueManagement>
    <scm>
        <url>https://github.com/ant-media/Ant-Media-Server.git</url>
        <connection>git@github.com:ant-media/Ant-Media-Server.git</connection>
        <developerConnection>git@github.com:ant-media/Ant-Media-Server.git</developerConnection>
        <tag>media-server,webrtc,rtmp,rtsp,mp4-hls,stream,broadcast,hls,ip-camera,mp4,flv</tag>
    </scm>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>sonatype-snapshots</id>
            <name>Sonatype Snapshots</name>
            <url>http://oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
        <repository>
            <id>sonatype-releases</id>
            <name>Sonatype Releases</name>
            <url>http://oss.sonatype.org/content/repositories/releases</url>
        </repository>
    </repositories>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
    <properties>
        <skipTests>false</skipTests>
        <build.dir>target</build.dir>
        <finalName>${project.artifactId}</finalName>
        <maven.build.timestamp.format>yyyyMMdd_HHmm</maven.build.timestamp.format>
        <buildNumber>${maven.build.timestamp}</buildNumber>

    </properties>

    <build>
        <defaultGoal>install</defaultGoal>
        <directory>${build.dir}</directory>
        <finalName>${finalName}</finalName>
        
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>           
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>           
                 <executions>
			          <execution>
			            <id>service</id> <!-- This part creates the ant-media-server-service.jar -->
			            <goals><goal>jar</goal></goals>
			            <phase>package</phase>
			            <configuration>
			              <classifier>service</classifier>			       
			              <includes>
			              	<include>org/red5/server/classloading/*</include>
			              	<include>org/red5/server/Bootstrap.class</include>
			              	<include>org/red5/server/Shutdown.class</include>
			              </includes>
			            </configuration>
			          </execution>
			          <execution>
			          	  <id>server</id> <!-- This part creates the ant-media-server-server.jar -->
			              <goals><goal>jar</goal></goals>
			              <phase>package</phase>
				          <configuration>
				                <classifier>server</classifier>	
			                    <excludes>
			                        <exclude>**/red5_codeformat_eclipse.xml</exclude>
			                        <exclude>**/red5_codetemplate.xml</exclude>
			                    </excludes>
			                    <archive>
			                        <manifest>
			                            <mainClass>io.antmedia.Version</mainClass>
			                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
			                        </manifest>
			                        <manifestEntries>
			                            <Build-OS>${os.name} ${os.version}</Build-OS>
			                            <Build-Java>Java ${java.version}</Build-Java>
			                            <Build-Number>${buildNumber}</Build-Number>
			                            <Main-Class>io.antmedia.Version</Main-Class>
			                        </manifestEntries>
			                    </archive>
		                	</configuration>
			          </execution>
                 </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus-staging-maven-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven-gpg-plugin.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
			                <gpgArguments>
			                    <arg>--pinentry-mode</arg>
			                    <arg>loopback</arg>
			                </gpgArguments>
          				</configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <argLine>@{argLine} --illegal-access=permit -Xmx750M -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -Djava.library.path=${project.basedir}/src/main/server/lib/native-linux-x86_64</argLine>
                	<skipAfterFailureCount>1</skipAfterFailureCount>
                </configuration>
            </plugin>
             <plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.8.5</version>
			    <executions>
			        <execution>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>report</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>      
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.8</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>false</springmvc>
                            <locations>io.antmedia.rest</locations>
                            <swaggerDirectory>target/swagger</swaggerDirectory>
                            <swaggerFileName>swagger</swaggerFileName>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- >>>>>>> master <plugin> <groupId>com.webcohesion.enunciate</groupId>
                <artifactId>enunciate-maven-plugin</artifactId> <version>${enunciate.version}</version>
                <executions> <execution> <goals> <goal>docs</goal> </goals> <configuration>
                <configFile>enunciate.xml</configFile> <docsDir>${project.build.directory}</docsDir>
                </configuration> </execution> </executions> </plugin> -->
        </plugins>
         </pluginManagement>
    </build>
    <dependencies>
        <dependency>
            <groupId>io.antmedia.ipcamera.onvif</groupId>
            <artifactId>ONVIF</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <version>${tomcat.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-catalina-ha</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-websocket</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow</artifactId>
            <version>${tensorflow.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf-java.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- <dependency> <groupId>uk.org.lidalia</groupId> <artifactId>sysout-over-slf4j</artifactId>
            <version>1.0.2</version> </dependency> -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.antmedia</groupId>
            <artifactId>ant-media-server-common</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>${commons-io}</version>
		</dependency>
        <dependency>
            <groupId>org.red5</groupId>
            <artifactId>red5-io</artifactId>
            <version>${red5-io.version}</version>
            <type>jar</type>
            <exclusions>
                <exclusion>
                    <artifactId>bcprov-jdk15on</artifactId>
                    <groupId>org.bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mina-core</artifactId>
                    <groupId>org.apache.mina</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mina-integration-jmx</artifactId>
                    <groupId>org.apache.mina</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mina-integration-beans</artifactId>
                    <groupId>org.apache.mina</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-beanutils</artifactId>
                    <groupId>commons-beanutils</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-lang3</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>mina-integration-beans</artifactId>
            <groupId>org.apache.mina</groupId>
            <version>${mina.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>c3p0</groupId>
                    <artifactId>c3p0</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Runtime plugin deps -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-el</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Provides CORS functionality http://software.dzhuvinov.com/cors-filter.html -->
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>${cors-filter.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
    		<groupId>org.bytedeco</groupId>
    		<artifactId>ffmpeg-platform-gpl</artifactId>
            <version>${javacpp.ffmpeg.version}</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>cuda-platform</artifactId>
			<version>${javacpp.cuda.version}</version>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>io.antmedia.api.periscope</groupId>
            <artifactId>PeriscopeAPI</artifactId>
            <version>${periscope-api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.restfb/restfb -->
        <dependency>
            <groupId>com.restfb</groupId>
            <artifactId>restfb</artifactId>
            <version>${restfb.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-youtube</artifactId>
            <version>${youtube.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring4</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>${mapdb.version}</version>
            <type>bundle</type>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.tyrus</groupId>
            <artifactId>tyrus-server</artifactId>
            <version>1.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.tyrus</groupId>
            <artifactId>tyrus-container-grizzly-server</artifactId>
            <version>1.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>3.3.9</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpmime.version}</version>
        </dependency>
        <dependency>
		    <groupId>org.apache.kafka</groupId>
		    <artifactId>kafka-streams</artifactId>
        </dependency>
  		<dependency>
    		<groupId>io.jsonwebtoken</groupId>
    		<artifactId>jjwt-api</artifactId>
    		<version>0.11.2</version>
		</dependency>
		<dependency>
    		<groupId>io.jsonwebtoken</groupId>
    		<artifactId>jjwt-impl</artifactId>
    		<version>0.11.2</version>
    		<scope>provided</scope>
		</dependency>
		<dependency>
 		   <groupId>io.jsonwebtoken</groupId>
    		<artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
    		<version>0.11.2</version>
    		<scope>provided</scope>
		</dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>assemble</id>
            <dependencies>
                <dependency>
                    <groupId>io.antmedia.webrtc</groupId>
                    <artifactId>StreamApp</artifactId>
                    <version>${project.parent.version}</version>
                    <type>war</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>io.antmedia.app</groupId>
                    <artifactId>root</artifactId>
                    <version>${project.parent.version}</version>
                    <type>war</type>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>3.1.12.2</version>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <failOnError>true</failOnError>
                            <plugins>
                                <plugin>
                                    <groupId>com.h3xstream.findsecbugs</groupId>
                                    <artifactId>findsecbugs-plugin</artifactId>
                                    <version>LATEST</version>
                                </plugin>
                            </plugins>
                        </configuration>
                    </plugin>
                    <!-- TODO: Enable this later. There is a bug in the plugin with the start of the new year 
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                     -->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>

                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <includeScope>compile</includeScope>
                                    <excludeScope>test</excludeScope>
                                    <excludeGroupIds>org.tensorflow,</excludeGroupIds>
                                    <excludeArtifactIds>cuda,cuda-platform</excludeArtifactIds>
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependencies-plugin</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/plugins</outputDirectory>
                                    <excludeGroupIds>org.tensorflow</excludeGroupIds>
                                    <excludeArtifactIds>cuda,cuda-platform</excludeArtifactIds>
                                    <includeScope>provided</includeScope>
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                             <execution>
                               <id>unpack-root-app</id>
					           <phase>package</phase>
					           <goals>
					             <goal>unpack</goal>
					           </goals>
					           <configuration>
					             <artifactItems>
						              <artifactItem>
	                                      <groupId>io.antmedia.app</groupId>
	                                      <artifactId>root</artifactId>
	                                      <version>${project.parent.version}</version>
	                                      <type>war</type>
	                                      <overWrite>true</overWrite>
	                                      <outputDirectory>${project.build.directory}/webapps/root</outputDirectory>
	                                  </artifactItem>
                                   </artifactItems>
					           </configuration>
                            </execution>
                            <execution>
                                <id>copy-war-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.antmedia.webrtc</groupId>
                                            <artifactId>StreamApp</artifactId>
                                            <version>${project.parent.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
			            <groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
							    <id>create-liveapp</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
							    <executable>src/main/server/create_app.sh</executable>
									<arguments>
										<argument>LiveApp</argument>
										<argument>${project.build.directory}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create-webrtcapp</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
							    <executable>src/main/server/create_app.sh</executable>
									<arguments>
										<argument>WebRTCApp</argument>
										<argument>${project.build.directory}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
			        </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/server.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <!-- this is used for inheritance merges -->
                                <phase>package</phase>
                                <!-- bind to the packaging phase -->
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>${project.artifactId}</finalName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>assemble_enterprise</id>
            <dependencies>
                <dependency>
                    <groupId>io.antmedia.webrtc</groupId>
                    <artifactId>StreamApp</artifactId>
                    <version>${project.parent.version}</version>
                    <type>war</type>
                </dependency>
                <dependency>
                    <groupId>io.antmedia.app</groupId>
                    <artifactId>root</artifactId>
                    <version>${project.parent.version}</version>
                    <type>war</type>
                </dependency>
                <dependency>
                    <groupId>io.antmedia.enterprise</groupId>
                    <artifactId>ant-media-enterprise</artifactId>
                    <version>${project.parent.version}</version>
                    <type>jar</type>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <includeScope>compile</includeScope>
                                    <excludeScope>test</excludeScope>
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependencies-plugin</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/plugins</outputDirectory>
                                    <includeScope>provided</includeScope>
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                            <execution>
                               <id>unpack-root-app</id>
					           <phase>package</phase>
					           <goals>
					             <goal>unpack</goal>
					           </goals>
					           <configuration>
					             <artifactItems>
						              <artifactItem>
	                                      <groupId>io.antmedia.app</groupId>
	                                      <artifactId>root</artifactId>
	                                      <version>${project.parent.version}</version>
	                                      <type>war</type>
	                                      <overWrite>true</overWrite>
	                                      <outputDirectory>${project.build.directory}/webapps/root</outputDirectory>
	                                  </artifactItem>
                                   </artifactItems>
					           </configuration>
                            </execution>
                            <execution>
                                <id>copy-war-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.antmedia.webrtc</groupId>
                                            <artifactId>StreamApp</artifactId>
                                            <version>${project.parent.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependency-enterprise-plugin</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.antmedia.enterprise</groupId>
                                            <artifactId>ant-media-enterprise</artifactId>
                                            <version>${ant-media-server-enterprise.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/plugins</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
			            <groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
							    <id>create-liveapp</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
							    <executable>src/main/server/create_app.sh</executable>
									<arguments>
										<argument>LiveApp</argument>
										<argument>${project.build.directory}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create-webrtcappee</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
							    <executable>src/main/server/create_app.sh</executable>
									<arguments>
										<argument>WebRTCAppEE</argument>
										<argument>${project.build.directory}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
			        </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/server_enterprise.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <!-- this is used for inheritance merges -->
                                <phase>package</phase>
                                <!-- bind to the packaging phase -->
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>${project.artifactId}</finalName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>war</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/war.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <!-- this is used for inheritance merges -->
                                <phase>package</phase>
                                <!-- bind to the packaging phase -->
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
