<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/lang 
	http://www.springframework.org/schema/lang/spring-lang.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config></context:annotation-config>

	<!-- War deployer -->
	<bean id="warDeployer" class="org.red5.server.tomcat.WarDeployer">
		<property name="checkInterval" value="${war.deploy.server.check.interval}" />
		<property name="webappFolder" value="${red5.root}/webapps" />
		<!-- Expand war files prior to startup of the remaining services -->
		<property name="expandWars" value="true" />
	</bean>

	<!-- The tomcat connectors may be blocking or non-blocking. Select between 
		either option via the protocol property. Blocking I/O: <property name="protocol" 
		value="org.apache.coyote.http11.Http11Protocol" /> Non-blocking I/O: <property 
		name="protocol" value="org.apache.coyote.http11.Http11NioProtocol" /> -->

	<!-- cluster start
	<bean id="tomcat.cluster" class="io.antmedia.enterprise.cluster.TcpCluster">
		<property name="clusterStore">
			<bean class="io.antmedia.enterprise.cluster.ClusterStore">
				<constructor-arg value="${clusterdb.host}" />
				<constructor-arg value="${clusterdb.user}" />
				<constructor-arg value="${clusterdb.password}" />
			</bean>
		</property>
	</bean>
	cluster end -->


	<!-- Tomcat without SSL enabled -->
	<bean id="tomcat.server" class="org.red5.server.tomcat.TomcatLoader"
		depends-on="context.loader,warDeployer" lazy-init="true">
		<!-- cluster --><!-- property name="cluster" ref="tomcat.cluster" /--><!-- cluster -->
		<property name="webappFolder" value="${red5.root}/webapps" />

		<property name="connectors">
			<list>
				<bean name="httpConnector" class="org.red5.server.tomcat.TomcatConnector">
					<property name="protocol"
						value="org.apache.coyote.http11.Http11Nio2Protocol" />
					<property name="address" value="${http.host}:${http.port}" />
					<property name="redirectPort" value="${https.port}" />
					<property name="connectionProperties">
						<map>
							<entry key="maxKeepAliveRequests" value="${http.max_keep_alive_requests}" />
							<entry key="keepAliveTimout" value="-1" />
						</map>
					</property>
				</bean>
				<!-- https start
				<bean name="httpsConnector" class="org.red5.server.tomcat.TomcatConnector"> 
						<property name="secure" value="true" /> 
						<property name="protocol" value="org.apache.coyote.http11.Http11NioProtocol"/> 
						<property name="address" value="${http.host}:${https.port}" /> 
						<property name="redirectPort" value="${http.port}" /> 
						<property name="connectionProperties"> 
							<map> 
								<entry key="port" value="${https.port}" /> 
								<entry key="redirectPort" value="${http.port}" /> 
								<entry key="SSLEnabled" value="true" /> 
								<entry key="sslProtocol" value="TLS" /> 
								<entry key="keystoreFile" value="${rtmps.keystorefile}" /> 
								<entry key="keystorePass" value="${rtmps.keystorepass}" /> 
								<entry key="truststoreFile" value="${rtmps.truststorefile}" /> 
								<entry key="truststorePass" value="${rtmps.truststorepass}" /> 
								<entry key="clientAuth" value="false" /> 
								<entry key="allowUnsafeLegacyRenegotiation" value="true" /> 
								<entry key="maxKeepAliveRequests" value="${http.max_keep_alive_requests}"/> 
								<entry key="keepAliveTimout" value="-1"/> 
								<entry key="useExecutor" value="true"/> 
								<entry key="maxThreads" value="${http.max_threads}"/> 
								<entry key="acceptorThreadCount" value="${http.acceptor_thread_count}"/> 
								<entry key="processorCache" value="${http.processor_cache}"/> 
							</map> 
						</property> 
					</bean>
					https end -->
			</list>
		</property>

		<property name="baseHost">
			<bean class="org.apache.catalina.core.StandardHost">
				<property name="name" value="${http.host}" />
			</bean>
		</property>

		<property name="valves">
			<list>
				<bean id="valve.access" class="org.apache.catalina.valves.AccessLogValve">
					<property name="directory" value="log" />
					<property name="prefix" value="${http.host}_access" />
					<property name="suffix" value=".log" />
					<property name="pattern" value="common" />
					<property name="rotatable" value="true" />
				</bean>
				
				<!-- cluster start
				<bean id="valve.cluster" class="io.antmedia.enterprise.cluster.HttpLiveStreamValve"/>
				cluster end --> 
			</list>
		</property>

	</bean>

</beans>