<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<!-- The display-name element contains a short name that is intended to be 
		displayed by tools. The display name need not be unique. -->
	<display-name>root</display-name>

	<!-- The context-param element contains the declaration of a web application's 
		servlet context initialization parameters. -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>/root</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.red5.logging.ContextLoggingListener
		</listener-class>
	</listener>
	<context-param>
        <param-name>logbackDisableServletContainerInitializer</param-name>
        <param-value>true</param-value>
    </context-param>

	<servlet>
		<servlet-name>jersey-serlvet</servlet-name>
		<servlet-class>
			org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>io.antmedia.console.rest</param-value>
		</init-param>
			  <init-param>
      		  <param-name>jersey.config.server.provider.classnames</param-name>
        	<param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
   		 </init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>jersey-serlvet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	

	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>io.antmedia.filter.CorsHeaderFilter</filter-class>
		<init-param>
		  <param-name>cors.allowed.origins</param-name>
		  <param-value>*</param-value>
		</init-param>
		<init-param>
		  <param-name>cors.allowed.methods</param-name>
		  <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
		</init-param>
		 <init-param>
		 	<param-name>cors.allowed.headers</param-name>
            <param-value>Accept, Origin, X-Requested-With, Access-Control-Request-Headers, Content-Type, Access-Control-Request-Method, Authorization, ProxyAuthorization</param-value>
         </init-param>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>DashboardPermissionFilter</filter-name>
		<filter-class>io.antmedia.filter.IPFilterDashboard</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>DashboardPermissionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- JWT Server Filter combined with AuthenticationFilter-->
	<filter>
    	<filter-name>AuthenticationFilter</filter-name>
   		<filter-class>io.antmedia.console.rest.AuthenticationFilter</filter-class>
  	</filter>
  	
  	<filter-mapping>
  		<filter-name>AuthenticationFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
  	</filter-mapping>
  	
  	<servlet>
	  <servlet-name>RequestDispatherFilter</servlet-name>
	  <servlet-class>io.antmedia.console.servlet.ProxyServlet</servlet-class>
	  <init-param>
	    <param-name>targetUri</param-name>
	    <param-value>http://localhost:5080/{_path}</param-value>
	  </init-param>
	  <init-param>
	    <param-name>log</param-name>
	    <param-value>false</param-value>
	  </init-param>
	  <init-param>
	  	<param-name>forwardip</param-name>
	  	<param-value>false</param-value>
	  </init-param>
	</servlet>
	
	<servlet-mapping>
	  <servlet-name>RequestDispatherFilter</servlet-name>
	  <url-pattern>/rest/request/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>RequestDispatherFilter</servlet-name>
	  <url-pattern>/rest/v2/request/*</url-pattern>
	</servlet-mapping>
	
	<!-- 
	<filter>
    		<filter-name>CorsHeaderFilter</filter-name>
   		<filter-class>io.antmedia.console.servlet.CorsHeaderFilter</filter-class>
  	</filter>
  	
  	<filter-mapping>
  		<filter-name>CorsHeaderFilter</filter-name>
		<url-pattern>/rest/request/*</url-pattern>
  	</filter-mapping>
  	-->

	<!-- The security-constraint element is used to associate security constraints 
		with one or more web resource collections -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Forbidden</web-resource-name>
			<url-pattern>/WEB-INF/*</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Forbidden</web-resource-name>
			<url-pattern>/persistence/*</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Forbidden</web-resource-name>
			<url-pattern>/streams/*</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>
	
	<distributable/>
</web-app>
